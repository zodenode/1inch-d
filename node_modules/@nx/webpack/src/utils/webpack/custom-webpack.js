"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRegistered = exports.resolveCustomWebpackConfig = void 0;
const tsnode_register_1 = require("@nx/js/src/utils/typescript/tsnode-register");
function resolveCustomWebpackConfig(path, tsConfig) {
    (0, tsnode_register_1.tsNodeRegister)(path, tsConfig);
    const customWebpackConfig = require(path);
    // If the user provides a configuration in TS file
    // then there are 2 cases for exporing an object. The first one is:
    // `module.exports = { ... }`. And the second one is:
    // `export default { ... }`. The ESM format is compiled into:
    // `{ default: { ... } }`
    return customWebpackConfig.default || customWebpackConfig;
}
exports.resolveCustomWebpackConfig = resolveCustomWebpackConfig;
function isRegistered() {
    return (require.extensions['.ts'] != undefined ||
        require.extensions['.tsx'] != undefined);
}
exports.isRegistered = isRegistered;
