"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createProjectConfigurationInNewDestination = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
function createProjectConfigurationInNewDestination(tree, schema, projectConfig) {
    var _a;
    projectConfig.name = schema.newProjectName;
    const isRootProject = projectConfig.root === '.';
    // Subtle bug if project name === path, where the updated name was being overrideen.
    const { name } = projectConfig, rest = tslib_1.__rest(projectConfig, ["name"]);
    // replace old root path with new one
    let newProjectString = JSON.stringify(rest);
    if (isRootProject) {
        // Don't replace . with new root since it'll match all characters.
        // Only look for "./" and replace with new root.
        newProjectString = newProjectString.replace(/\.\//g, schema.relativeToRootDestination + '/');
        newProjectString = newProjectString.replace(/"((tsconfig|jest|webpack|vite)\..*?\.(ts|js|json))"/g, `"${schema.relativeToRootDestination}/$1"`);
        newProjectString = newProjectString.replace(/"(\.\/)?src\/(.*?)"/g, `"${schema.relativeToRootDestination}/src/$2"`);
    }
    else {
        newProjectString = newProjectString.replace(new RegExp(projectConfig.root, 'g'), schema.relativeToRootDestination);
    }
    const newProject = Object.assign({ name }, JSON.parse(newProjectString));
    newProject.root = schema.relativeToRootDestination;
    // Correct "e2e" target and config since part of the rename will be wrong unless we make the project name "e2e" more unique.
    // e.g. my-app-e2e is safer to search and replace than "e2e".
    if (projectConfig.name === 'e2e') {
        for (const [targetName, targetConfig] of Object.entries(newProject.targets)) {
            const wrongName = schema.relativeToRootDestination;
            if (targetName !== wrongName)
                continue;
            if (((_a = targetConfig.options) === null || _a === void 0 ? void 0 : _a.testingType) === wrongName) {
                targetConfig.options.testingType = 'e2e';
            }
            newProject.targets['e2e'] = targetConfig;
            delete newProject.targets[targetName];
        }
    }
    // Original sourceRoot is typically 'src' or 'app', but it could be any folder.
    // Make sure it is updated to be under the new destination.
    if (isRootProject && projectConfig.sourceRoot) {
        newProject.sourceRoot = (0, devkit_1.joinPathFragments)(schema.relativeToRootDestination, projectConfig.sourceRoot);
    }
    // Create a new project with the root replaced
    (0, devkit_1.addProjectConfiguration)(tree, schema.newProjectName, newProject);
}
exports.createProjectConfigurationInNewDestination = createProjectConfigurationInNewDestination;
